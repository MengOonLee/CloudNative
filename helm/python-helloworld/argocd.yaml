# The Application CRD to deploy the Python hello-world application.
# API endpoint used to create the Application resource.
apiVersion: argoproj.io/v1alpha1
kind: Application
# Set the name of the resource and namespace where it should be deployed.
# In this case the Application resource name is set to `python-helloworld`
# and it is deployed in the `argocd` namespace.
metadata:
  name: python-helloworld
  namespace: argocd
spec:
  # Set the target cluster and namespace to deploy the Python hello-world application.
  # For example, the Python hello-world application is deployed in the `default` namespace
  # within the local cluster or `https://kubernetes.default.svc`.
  destination:
    namespace: default
    server: https://kubernetes.default.svc
  # Set the project the application belongs to.
  # In this case the `default` project is used.
  project: default
  # Define the source of the Python hello-world application manifests.
  # In this example, the manifests are stored in the `helm` repository
  # under the `python-manifests` folder. Additionally, the latest commit within
  # the repository is targeted or `HEAD`.
  source:
  # Change the source of manifests to a Helm chart
    helm:
      # Define the input values file
      valueFiles:
      - values.yaml
    # Set the path to the folder where the Helm chart is stored
    path: helm/python-helloworld
    # Set the base repository that contains the Helm chart
    repoURL: https://github.com/MengOonLee/Cloud_native
    targetRevision: HEAD